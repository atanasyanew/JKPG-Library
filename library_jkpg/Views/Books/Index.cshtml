@*@model IEnumerable<library_jkpg.Models.BOOK>*@
@model PagedList.IPagedList<library_jkpg.Models.BOOK>
@using PagedList.Mvc;
@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<div class="row form-inline">
    <div class="form-group">
        <a href="@Url.Action("Create", "Books")" class="btn btn-default"><i class="glyphicon glyphicon-plus"></i> Add new book</a>
    </div>

    <div class="form-group">
        @using (Html.BeginForm("Index", "Books", FormMethod.Get))
        {  
            @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { @class = "form-control", placeholder = "Find by Title, ISBN or Publication Info" })
            <input type="submit" value="Search" class="btn btn-default" />
            @*<button type="button"  value="Search" class="btn btn-default">
                <span class="glyphicon glyphicon-search"></span> Search
            </button>*@
        }
    </div>

 </div>

<br />

<table class="table table-bordered table-hover">
    <tr>
        <th>
            @*@Html.DisplayNameFor(model => model.Title)*@
            @Html.ActionLink("Title", "Index", new { sortOrder = ViewBag.TitleSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        @*<th>
            @Html.DisplayNameFor(model => model.PublicationYear)
        </th>*@
        <th>
            @*@Html.DisplayNameFor(model => model.publicationinfo)*@
            @Html.ActionLink("Publication Info", "Index", new { sortOrder = ViewBag.PublicationInfoSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.ISBN)*@
            @Html.ActionLink("ISBN", "Index", new { sortOrder = ViewBag.IsbnSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.pages)*@
            @Html.ActionLink("Pages", "Index", new { sortOrder = ViewBag.PagesSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.CLASSIFICATION.Signum)*@
            @Html.ActionLink("Signum", "Index", new { sortOrder = ViewBag.SignumSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        @*<th></th>*@
    </tr>

@foreach (var item in Model) {
    <tr>
        <td width="50%">
            @*@Html.DisplayFor(modelItem => item.Title)*@
            <a href="@Url.Action("Details", new { id = item.ISBN })">@Html.DisplayFor(modelItem => item.Title)</a>
        </td>
        @*<td>
            @Html.DisplayFor(modelItem => item.PublicationYear)
        </td>*@
        <td>
            @Html.DisplayFor(modelItem => item.publicationinfo)
        </td>
        <td nowrap>
            @Html.DisplayFor(modelItem => item.ISBN)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.pages)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CLASSIFICATION.Signum)
        </td>
        @*<td>
            @Html.ActionLink("Edit", "Edit", new { id=item.ISBN }) |
            @Html.ActionLink("Details", "Details", new { id=item.ISBN }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.ISBN })
        </td>*@
    </tr>
}

</table>
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))

